; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
default_envs = d1_serial

[common_env_data]
; custom script for setting up build flags
build_flags = !python bin/create_build_flags.py
   '-DESP_HOSTNAME="esp_skeleton"'
   '-DMQTT_TOPIC="esp_skeleton"'
   '-DNTP_SERVER="192.168.1.1"'
   '-DUPDATE_INTERVAL=10000'
   '-DFHEM_IODEV="MQTT_Broker"'

; Library dependencies
lib_deps_builtin =
	PubSubClient
	arduino-libraries/NTPClient@^3.1.0

; Monitor filter
monitor_filters = colorize, default

; Serial upload device
[env:d1_serial]
platform = espressif8266
board = d1_mini
framework = arduino
board_build.mcu = esp8266
board_build.f_cpu = 80000000L
monitor_speed = 115200
build_flags =
    ${common_env_data.build_flags}
lib_deps =
    ${common_env_data.lib_deps_builtin}
; initial setup via
upload_protocol = esptool

; Over the air upload device
[env:d1_ota]
platform = espressif8266
board = d1_mini
framework = arduino
board_build.mcu = esp8266
board_build.f_cpu = 80000000L
monitor_speed = 115200
build_flags =
    ${common_env_data.build_flags}
lib_deps =
    ${common_env_data.lib_deps_builtin}

; Over the air settings
upload_protocol = espota
upload_port = 192.168.1.59
upload_flags = --auth=${sysenv.ESP_OTA_PASSWORD}
